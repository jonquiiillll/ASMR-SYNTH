{"ast":null,"code":"var _jsxFileName = \"/Users/olgapavlova/Desktop/Art-practise/ADC-Generative-Art-Boilerplate-2023/app/javascript/prototypes/prototype_10/Container.jsx\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nimport * as Tone from 'tone';\nimport React, { Component } from 'react';\nimport { synthSettings, sequenceSettings } from './tunes/melody.js';\nimport { secondSynthSettings, secondSequenceSettings } from './tunes/bass.js';\nimport SC_Button from './SC_Button';\nimport SC_ToggleButtonSet from './SC_ToggleButtonSet';\nimport SC_Slider from './SC_Slider';\nvar synth;\nvar tremolo;\nvar freeverb;\nvar secondSynth;\nvar distortion;\nvar chorus;\nvar autoWah;\nvar autoPanner;\nvar pingPongDelay;\n\nvar Container = /*#__PURE__*/function (_Component) {\n  _inherits(Container, _Component);\n\n  var _super = _createSuper(Container);\n\n  function Container(props) {\n    var _this;\n\n    _classCallCheck(this, Container);\n\n    _this = _super.call(this, props);\n\n    _this.handleStart = function () {\n      var _this$state = _this.state,\n          synthSettings = _this$state.synthSettings,\n          secondSynthSettings = _this$state.secondSynthSettings,\n          freeverbSettings = _this$state.freeverbSettings,\n          autoWahSettings = _this$state.autoWahSettings,\n          autoPannerSettings = _this$state.autoPannerSettings,\n          distortionSettings = _this$state.distortionSettings,\n          tremoloSettings = _this$state.tremoloSettings,\n          chorusSettings = _this$state.chorusSettings,\n          pingPongDelaySettings = _this$state.pingPongDelaySettings;\n      synth = new Tone.Synth(synthSettings);\n      secondSynth = new Tone.Synth(secondSynthSettings);\n      chorus = new Tone.Chorus(chorusSettings).start();\n      freeverb = new Tone.Freeverb(freeverbSettings).toDestination();\n      autoPanner = new Tone.AutoPanner(autoPannerSettings).toDestination().start();\n      tremolo = new Tone.Tremolo(tremoloSettings).toDestination();\n      distortion = new Tone.Distortion(distortionSettings).toDestination();\n      autoWah = new Tone.AutoWah(autoWahSettings).toDestination();\n      pingPongDelay = new Tone.PingPongDelay(pingPongDelaySettings).toDestination();\n      synth.chain(tremolo, autoPanner, distortion, pingPongDelay);\n      secondSynth.chain(freeverb, chorus);\n      var part = new Tone.Part(function (time, note) {\n        synth.triggerAttackRelease(note.noteName, note.duration, time, note.velocity);\n      }, sequenceSettings.steps).start(0);\n      var secondPart = new Tone.Part(function (time, note) {\n        secondSynth.triggerAttackRelease(note.noteName, note.duration, time, note.velocity);\n      }, secondSequenceSettings).start(0);\n      part.loopEnd = sequenceSettings.duration;\n      part.loop = true;\n      secondPart.loopEnd = secondSequenceSettings.duration;\n      secondPart.loop = true;\n      Tone.Transport.start();\n    };\n\n    _this.handleValueChange = function (property, value) {\n      var _this$state2 = _this.state,\n          synthSettings = _this$state2.synthSettings,\n          secondSynthSettings = _this$state2.secondSynthSettings,\n          freeverbSettings = _this$state2.freeverbSettings,\n          autoPannerSettings = _this$state2.autoPannerSettings,\n          tremoloSettings = _this$state2.tremoloSettings,\n          distortionSettings = _this$state2.distortionSettings,\n          autoWahSettings = _this$state2.autoWahSettings,\n          chorusSettings = _this$state2.chorusSettings,\n          pingPongDelaySettings = _this$state2.pingPongDelaySettings;\n\n      if (property === 'synthType') {\n        synth.oscillator.type = value;\n        synthSettings.oscillator.type = value;\n      } else if (property === 'tremoloDepth') {\n        tremolo.depth.value = value;\n        tremoloSettings.depth = value;\n      } else if (property === 'tremoloSpread') {\n        tremolo.spread = value;\n        tremoloSettings.spread = value;\n      } else if (property === 'distortionWet') {\n        distortion.wet.value = value;\n        distortionSettings.wet = value;\n      } else if (property === 'distortionDist') {\n        distortion.distortion.value = value;\n        distortionSettings.distortion = value;\n      } else if (property === 'autoPannerWet') {\n        autoPanner.wet.value = value;\n        autoPannerSettings.wet = value;\n      } else if (property === 'autoPannerFrequency') {\n        autoPanner.frequency.value = value;\n        autoPannerSettings.frequency = value;\n      } else if (property === 'secondSynthType') {\n        secondSynth.oscillator.type = value;\n        secondSynthSettings.oscillator.type = value;\n      } else if (property === 'freeverbRoomSize') {\n        freeverb.roomSize.value = value;\n        freeverbSettings.roomSize = value;\n      } else if (property === 'freeverbWet') {\n        freeverb.wet.value = value;\n        freeverbSettings.wet = value;\n      } else if (property === 'pingPongDelayWet') {\n        pingPong.wet.value = value;\n        pingPongSettings.wet = value;\n      } else if (property === 'pingPongDelayDelayTime') {\n        pingPongDelay.delayTime.value = value;\n        pingPongDelaySettings.delayTime = value;\n      }\n\n      _this.setState({\n        secondSynthSettings: secondSynthSettings,\n        freeverbSettings: freeverbSettings,\n        synthSettings: synthSettings,\n        tremoloSettings: tremoloSettings,\n        chorusSettings: chorusSettings,\n        autoWahSettings: autoWahSettings,\n        pingPongDelaySettings: pingPongDelaySettings,\n        distortionSettings: distortionSettings,\n        autoPannerSettings: autoPannerSettings\n      });\n    };\n\n    var _tremoloSettings = {\n      wet: 1,\n      frequency: 1000,\n      type: 'sine',\n      depth: 0,\n      spread: 10\n    };\n    var _autoWahSettings = {\n      wet: 1,\n      baseFrequency: 100,\n      octaves: 2,\n      sensitivity: 100,\n      Q: 2,\n      gain: 2,\n      follower: 0.1\n    };\n    var _autoPannerSettings = {\n      wet: 0,\n      type: 'sine',\n      frequency: 1,\n      depth: 1\n    };\n    var _distortionSettings = {\n      wet: 0,\n      distortion: 10,\n      oversample: '4x'\n    };\n    var _chorusSettings = {\n      wet: 1,\n      type: 'sine',\n      frequency: 3,\n      delayTime: 2,\n      depth: 0.7,\n      spread: 30\n    };\n    var _freeverbSettings = {\n      wet: 1,\n      roomSize: 0,\n      dampening: 40\n    };\n    var _pingPongDelaySettings = {\n      wet: 0.8,\n      delayTime: 0.2,\n      maxDelayTime: 1\n    };\n    _this.state = {\n      synthSettings: synthSettings,\n      secondSynthSettings: secondSynthSettings,\n      autoWahSettings: _autoWahSettings,\n      freeverbSettings: _freeverbSettings,\n      chorusSettings: _chorusSettings,\n      distortionSettings: _distortionSettings,\n      tremoloSettings: _tremoloSettings,\n      pingPongDelaySettings: _pingPongDelaySettings,\n      autoPannerSettings: _autoPannerSettings\n    };\n    return _this;\n  }\n\n  _createClass(Container, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state3 = this.state,\n          synthSettings = _this$state3.synthSettings,\n          secondSynthSettings = _this$state3.secondSynthSettings,\n          freeverbSettings = _this$state3.freeverbSettings,\n          autoPannerSettings = _this$state3.autoPannerSettings,\n          distortionSettings = _this$state3.distortionSettings,\n          autoWahSettings = _this$state3.autoWahSettings,\n          tremoloSettings = _this$state3.tremoloSettings,\n          rythmSettings = _this$state3.rythmSettings,\n          chorusSettings = _this$state3.chorusSettings,\n          pingPongDelaySettings = _this$state3.pingPongDelaySettings;\n      var options = ['sine', 'square', 'sawtooth', 'triangle'];\n      var optionstwo = ['sine', 'square', 'sawtooth', 'triangle'];\n      var wet = ['0', '1'];\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"Container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(SC_Button, {\n        text: \"Start\",\n        handleClick: this.handleStart,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"ContainerOfEffects\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"First\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"FirstEffect\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(SC_ToggleButtonSet, {\n        name: \"Type\",\n        options: options,\n        value: synthSettings.oscillator.type,\n        property: \"synthType\",\n        handleChange: this.handleValueChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"Columns\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"columnOfEffect\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(SC_Slider, {\n        name: \"Tremolo Depth\",\n        min: 0,\n        max: 1,\n        step: 0.01,\n        value: tremoloSettings.depth,\n        property: \"tremoloDepth\",\n        handleChange: this.handleValueChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(SC_Slider, {\n        name: \"Tremolo Spread\",\n        min: 1,\n        max: 200,\n        step: 1,\n        value: tremoloSettings.spread,\n        property: \"tremoloSpread\",\n        handleChange: this.handleValueChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(SC_Slider, {\n        name: \"AutoPanner Wet\",\n        min: 0,\n        max: 100,\n        step: 0.1,\n        value: autoPannerSettings.frequency,\n        property: \"autoPannerFrequency\",\n        handleChange: this.handleValueChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(SC_Slider, {\n        name: \"PingPongDelay Wet\",\n        min: 0,\n        max: 1,\n        step: 0.1,\n        value: pingPongDelaySettings.frequency,\n        property: \"pingPongDelayWet\",\n        handleChange: this.handleValueChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"columnOfEffect\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(SC_Slider, {\n        name: \"Distortion Wet\",\n        min: 0,\n        max: 1,\n        step: 0.1,\n        value: distortionSettings.wet,\n        property: \"distortionWet\",\n        handleChange: this.handleValueChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(SC_Slider, {\n        name: \"Distortion dist\",\n        min: 0,\n        max: 100,\n        step: 1,\n        value: distortionSettings.dist,\n        property: \"distortionDist\",\n        handleChange: this.handleValueChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(SC_Slider, {\n        name: \"AutoPanner Wet\",\n        min: 0,\n        max: 1,\n        step: 0.01,\n        value: autoPannerSettings.wet,\n        property: \"autoPannerWet\",\n        handleChange: this.handleValueChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(SC_Slider, {\n        name: \"PingPongDelay DelayTime\",\n        min: 0,\n        max: 1,\n        step: 0.01,\n        value: pingPongDelaySettings.delayTime,\n        property: \"pingPongDelayDelayTime\",\n        handleChange: this.handleValueChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 13\n        }\n      })))), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"cursive\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 11\n        }\n      }, \"first instrument\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"Second\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"SecondEffect\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(SC_ToggleButtonSet, {\n        name: \"Bass\",\n        options: optionstwo,\n        value: secondSynthSettings.oscillator.type,\n        property: \"secondSynthType\",\n        handleChange: this.handleValueChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"Columns\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"columnOfEffect\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(SC_Slider, {\n        name: \"freeverb RoomSize\",\n        min: 0,\n        max: 1,\n        step: 0.01,\n        value: freeverbSettings.roomSize,\n        property: \"freeverbRoomSize\",\n        handleChange: this.handleValueChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"columnOfEffect\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(SC_Slider, {\n        name: \"freeverb Wet\",\n        min: 0,\n        max: 1,\n        step: 0.01,\n        value: freeverbSettings.wet,\n        property: \"freeverbWet\",\n        handleChange: this.handleValueChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 13\n        }\n      })))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"footer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 3\n        }\n      }))));\n    }\n  }]);\n\n  return Container;\n}(Component);\n\nexport { Container as default };","map":{"version":3,"names":["Tone","React","Component","synthSettings","sequenceSettings","secondSynthSettings","secondSequenceSettings","SC_Button","SC_ToggleButtonSet","SC_Slider","synth","tremolo","freeverb","secondSynth","distortion","chorus","autoWah","autoPanner","pingPongDelay","Container","props","handleStart","state","freeverbSettings","autoWahSettings","autoPannerSettings","distortionSettings","tremoloSettings","chorusSettings","pingPongDelaySettings","Synth","Chorus","start","Freeverb","toDestination","AutoPanner","Tremolo","Distortion","AutoWah","PingPongDelay","chain","part","Part","time","note","triggerAttackRelease","noteName","duration","velocity","steps","secondPart","loopEnd","loop","Transport","handleValueChange","property","value","oscillator","type","depth","spread","wet","frequency","roomSize","pingPong","pingPongSettings","delayTime","setState","baseFrequency","octaves","sensitivity","Q","gain","follower","oversample","dampening","maxDelayTime","rythmSettings","options","optionstwo","dist"],"sources":["/Users/olgapavlova/Desktop/Art-practise/ADC-Generative-Art-Boilerplate-2023/app/javascript/prototypes/prototype_10/Container.jsx"],"sourcesContent":["import * as Tone from 'tone'\nimport React, { Component } from 'react'\n\nimport { synthSettings, sequenceSettings} from './tunes/melody.js'\nimport { secondSynthSettings, secondSequenceSettings} from './tunes/bass.js'\n\nimport SC_Button from './SC_Button'\nimport SC_ToggleButtonSet from './SC_ToggleButtonSet'\nimport SC_Slider from './SC_Slider'\n\nlet synth\nlet tremolo\nlet freeverb\nlet secondSynth\nlet distortion\nlet chorus\nlet autoWah\nlet autoPanner\nlet pingPongDelay\n\nexport default class Container extends Component {\n  constructor(props) {\n    super(props)\n\n    const tremoloSettings = {\n      wet: 1,\n      frequency: 1000,\n      type: 'sine',\n      depth: 0,\n      spread: 10\n    }\n\n    const autoWahSettings = {\n      wet: 1,\n      baseFrequency: 100,\n      octaves: 2,\n      sensitivity:100,\n      Q: 2,\n      gain: 2,\n      follower: 0.1\n    }\n\n    const autoPannerSettings = {\n      wet: 0,\n      type: 'sine',\n      frequency: 1,\n      depth: 1\n    }\n\n    const distortionSettings = {\n      wet: 0,\n      distortion: 10,\n      oversample: '4x'\n    }\n\n    const chorusSettings = {\n      wet: 1,\n      type: 'sine',\n      frequency: 3,\n      delayTime: 2,\n      depth: 0.7,\n      spread: 30\n    }\n\n    const freeverbSettings = {\n      wet: 1,\n      roomSize: 0,\n      dampening: 40\n    }\n\n    const pingPongDelaySettings = { wet: 0.8, delayTime: 0.2, maxDelayTime: 1 }\n\n    this.state = {\n      synthSettings,\n      secondSynthSettings,\n      autoWahSettings,\n      freeverbSettings,\n      chorusSettings,\n      distortionSettings,\n      tremoloSettings,\n      pingPongDelaySettings,\n      autoPannerSettings\n    }\n  }\n\n  handleStart = () => {\n    const { synthSettings, secondSynthSettings, freeverbSettings, autoWahSettings, autoPannerSettings, distortionSettings, tremoloSettings, chorusSettings, pingPongDelaySettings } = this.state\n\n    synth = new Tone.Synth(synthSettings)\n    secondSynth = new Tone.Synth(secondSynthSettings)\n    chorus = new Tone.Chorus(chorusSettings).start()\n    freeverb = new Tone.Freeverb(freeverbSettings).toDestination();\n    autoPanner = new Tone.AutoPanner(autoPannerSettings).toDestination().start();\n    tremolo = new Tone.Tremolo(tremoloSettings).toDestination()\n    distortion = new Tone.Distortion(distortionSettings).toDestination();\n    autoWah = new Tone.AutoWah(autoWahSettings).toDestination()\n    pingPongDelay = new Tone.PingPongDelay(\n      pingPongDelaySettings\n    ).toDestination()\n\n    synth.chain( tremolo, autoPanner, distortion, pingPongDelay)\n    secondSynth.chain( freeverb,chorus)\n\n\n\n    const part = new Tone.Part((time, note) => {\n      synth.triggerAttackRelease(\n        note.noteName,\n        note.duration,\n        time,\n        note.velocity\n      )\n    }, sequenceSettings.steps).start(0)\n\n    const secondPart = new Tone.Part((time, note) => {\n      secondSynth.triggerAttackRelease(\n        note.noteName,\n        note.duration,\n        time,\n        note.velocity\n      )\n    }, secondSequenceSettings).start(0)\n\n    part.loopEnd = sequenceSettings.duration\n    part.loop = true\n    secondPart.loopEnd = secondSequenceSettings.duration\n    secondPart.loop = true\n    Tone.Transport.start()\n  }\n\n\n\n  handleValueChange = (property, value) => {\n    const { synthSettings, secondSynthSettings,freeverbSettings, autoPannerSettings, tremoloSettings, distortionSettings, autoWahSettings, chorusSettings, pingPongDelaySettings } = this.state\n\n    if (property === 'synthType') {\n      synth.oscillator.type = value\n      synthSettings.oscillator.type = value\n    } else if (property === 'tremoloDepth') {\n      tremolo.depth.value = value\n      tremoloSettings.depth = value\n    } else if (property === 'tremoloSpread') {\n      tremolo.spread = value\n      tremoloSettings.spread = value\n    } else if (property === 'distortionWet') {\n      distortion.wet.value = value\n      distortionSettings.wet = value\n    } else if (property === 'distortionDist') {\n      distortion.distortion.value = value\n      distortionSettings.distortion = value\n    } else if (property === 'autoPannerWet') {\n      autoPanner.wet.value = value\n      autoPannerSettings.wet = value\n    } else if (property === 'autoPannerFrequency') {\n      autoPanner.frequency.value = value\n      autoPannerSettings.frequency = value\n    } else if (property === 'secondSynthType') {\n      secondSynth.oscillator.type = value\n      secondSynthSettings.oscillator.type = value\n    } else if (property === 'freeverbRoomSize') {\n      freeverb.roomSize.value = value\n      freeverbSettings.roomSize = value\n    } else if (property === 'freeverbWet') {\n      freeverb.wet.value = value\n      freeverbSettings.wet = value\n    } else if (property === 'pingPongDelayWet') {\n      pingPong.wet.value = value\n      pingPongSettings.wet = value\n    } else if (property === 'pingPongDelayDelayTime') {\n      pingPongDelay.delayTime.value = value\n      pingPongDelaySettings.delayTime = value\n    }\n\n\n    this.setState({\n      secondSynthSettings,\n      freeverbSettings,\n      synthSettings,\n      tremoloSettings,\n      chorusSettings,\n      autoWahSettings,\n      pingPongDelaySettings,\n      distortionSettings,\n      autoPannerSettings\n    })\n  }\n\n  render() {\n    const { synthSettings, secondSynthSettings, freeverbSettings, autoPannerSettings, distortionSettings, autoWahSettings, tremoloSettings, rythmSettings, chorusSettings, pingPongDelaySettings } = this.state\n\n    const options = ['sine', 'square', 'sawtooth', 'triangle']\n    const optionstwo = ['sine', 'square', 'sawtooth', 'triangle']\n    const wet = ['0', '1']\n\n    return (\n      <div className=\"Container\">\n        <SC_Button\n          text=\"Start\"\n          handleClick={this.handleStart}\n        />\n      <div className=\"ContainerOfEffects\">\n      <div className=\"First\">\n        <div className=\"FirstEffect\">\n            <SC_ToggleButtonSet\n              name=\"Type\"\n              options={options}\n              value={synthSettings.oscillator.type}\n              property=\"synthType\"\n              handleChange={this.handleValueChange}\n            />\n\n          <div className=\"Columns\">\n            <div className=\"columnOfEffect\">\n            <SC_Slider\n              name=\"Tremolo Depth\"\n              min={0}\n              max={1}\n              step={0.01}\n              value={tremoloSettings.depth}\n              property=\"tremoloDepth\"\n              handleChange={this.handleValueChange}\n            />\n            <SC_Slider\n              name=\"Tremolo Spread\"\n              min={1}\n              max={200}\n              step={1}\n              value={tremoloSettings.spread}\n              property=\"tremoloSpread\"\n              handleChange={this.handleValueChange}\n            />\n            <SC_Slider\n              name=\"AutoPanner Wet\"\n              min={0}\n              max={100}\n              step={0.1}\n              value={autoPannerSettings.frequency}\n              property=\"autoPannerFrequency\"\n              handleChange={this.handleValueChange}\n            />\n            <SC_Slider\n              name=\"PingPongDelay Wet\"\n              min={0}\n              max={1}\n              step={0.1}\n              value={pingPongDelaySettings.frequency}\n              property=\"pingPongDelayWet\"\n              handleChange={this.handleValueChange}\n            />\n\n          </div>\n          <div className=\"columnOfEffect\">\n            <SC_Slider\n              name=\"Distortion Wet\"\n              min={0}\n              max={1}\n              step={0.1}\n              value={distortionSettings.wet}\n              property=\"distortionWet\"\n              handleChange={this.handleValueChange}\n            />\n            <SC_Slider\n              name=\"Distortion dist\"\n              min={0}\n              max={100}\n              step={1}\n              value={distortionSettings.dist}\n              property=\"distortionDist\"\n              handleChange={this.handleValueChange}\n            />\n            <SC_Slider\n              name=\"AutoPanner Wet\"\n              min={0}\n              max={1}\n              step={0.01}\n              value={autoPannerSettings.wet}\n              property=\"autoPannerWet\"\n              handleChange={this.handleValueChange}\n            />\n            <SC_Slider\n              name=\"PingPongDelay DelayTime\"\n              min={0}\n              max={1}\n              step={0.01}\n              value={pingPongDelaySettings.delayTime}\n              property=\"pingPongDelayDelayTime\"\n              handleChange={this.handleValueChange}\n            />\n            </div>\n          </div>\n        </div>\n          <p className='cursive'>first instrument</p>\n        </div>\n          <div className=\"Second\">\n        <div className=\"SecondEffect\">\n        <SC_ToggleButtonSet\n          name=\"Bass\"\n          options={optionstwo}\n          value={secondSynthSettings.oscillator.type}\n          property=\"secondSynthType\"\n          handleChange={this.handleValueChange}\n        />\n        <div className=\"Columns\">\n          <div className=\"columnOfEffect\">\n          <SC_Slider\n            name=\"freeverb RoomSize\"\n            min={0}\n            max={1}\n            step={0.01}\n            value={freeverbSettings.roomSize}\n            property=\"freeverbRoomSize\"\n            handleChange={this.handleValueChange}\n          />\n          </div>\n            <div className=\"columnOfEffect\">\n            <SC_Slider\n              name=\"freeverb Wet\"\n              min={0}\n              max={1}\n              step={0.01}\n              value={freeverbSettings.wet}\n              property=\"freeverbWet\"\n              handleChange={this.handleValueChange}\n            />\n            </div>\n        </div>\n\n\n\n        </div>\n  <div className=\"footer\"></div>\n  </div>\n      </div>\n\n    </div>\n    )\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,IAAZ,MAAsB,MAAtB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,aAAT,EAAwBC,gBAAxB,QAA+C,mBAA/C;AACA,SAASC,mBAAT,EAA8BC,sBAA9B,QAA2D,iBAA3D;AAEA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AAEA,IAAIC,KAAJ;AACA,IAAIC,OAAJ;AACA,IAAIC,QAAJ;AACA,IAAIC,WAAJ;AACA,IAAIC,UAAJ;AACA,IAAIC,MAAJ;AACA,IAAIC,OAAJ;AACA,IAAIC,UAAJ;AACA,IAAIC,aAAJ;;IAEqBC,S;;;;;EACnB,mBAAYC,KAAZ,EAAmB;IAAA;;IAAA;;IACjB,0BAAMA,KAAN;;IADiB,MAgEnBC,WAhEmB,GAgEL,YAAM;MAClB,kBAAkL,MAAKC,KAAvL;MAAA,IAAQnB,aAAR,eAAQA,aAAR;MAAA,IAAuBE,mBAAvB,eAAuBA,mBAAvB;MAAA,IAA4CkB,gBAA5C,eAA4CA,gBAA5C;MAAA,IAA8DC,eAA9D,eAA8DA,eAA9D;MAAA,IAA+EC,kBAA/E,eAA+EA,kBAA/E;MAAA,IAAmGC,kBAAnG,eAAmGA,kBAAnG;MAAA,IAAuHC,eAAvH,eAAuHA,eAAvH;MAAA,IAAwIC,cAAxI,eAAwIA,cAAxI;MAAA,IAAwJC,qBAAxJ,eAAwJA,qBAAxJ;MAEAnB,KAAK,GAAG,IAAIV,IAAI,CAAC8B,KAAT,CAAe3B,aAAf,CAAR;MACAU,WAAW,GAAG,IAAIb,IAAI,CAAC8B,KAAT,CAAezB,mBAAf,CAAd;MACAU,MAAM,GAAG,IAAIf,IAAI,CAAC+B,MAAT,CAAgBH,cAAhB,EAAgCI,KAAhC,EAAT;MACApB,QAAQ,GAAG,IAAIZ,IAAI,CAACiC,QAAT,CAAkBV,gBAAlB,EAAoCW,aAApC,EAAX;MACAjB,UAAU,GAAG,IAAIjB,IAAI,CAACmC,UAAT,CAAoBV,kBAApB,EAAwCS,aAAxC,GAAwDF,KAAxD,EAAb;MACArB,OAAO,GAAG,IAAIX,IAAI,CAACoC,OAAT,CAAiBT,eAAjB,EAAkCO,aAAlC,EAAV;MACApB,UAAU,GAAG,IAAId,IAAI,CAACqC,UAAT,CAAoBX,kBAApB,EAAwCQ,aAAxC,EAAb;MACAlB,OAAO,GAAG,IAAIhB,IAAI,CAACsC,OAAT,CAAiBd,eAAjB,EAAkCU,aAAlC,EAAV;MACAhB,aAAa,GAAG,IAAIlB,IAAI,CAACuC,aAAT,CACdV,qBADc,EAEdK,aAFc,EAAhB;MAIAxB,KAAK,CAAC8B,KAAN,CAAa7B,OAAb,EAAsBM,UAAtB,EAAkCH,UAAlC,EAA8CI,aAA9C;MACAL,WAAW,CAAC2B,KAAZ,CAAmB5B,QAAnB,EAA4BG,MAA5B;MAIA,IAAM0B,IAAI,GAAG,IAAIzC,IAAI,CAAC0C,IAAT,CAAc,UAACC,IAAD,EAAOC,IAAP,EAAgB;QACzClC,KAAK,CAACmC,oBAAN,CACED,IAAI,CAACE,QADP,EAEEF,IAAI,CAACG,QAFP,EAGEJ,IAHF,EAIEC,IAAI,CAACI,QAJP;MAMD,CAPY,EAOV5C,gBAAgB,CAAC6C,KAPP,EAOcjB,KAPd,CAOoB,CAPpB,CAAb;MASA,IAAMkB,UAAU,GAAG,IAAIlD,IAAI,CAAC0C,IAAT,CAAc,UAACC,IAAD,EAAOC,IAAP,EAAgB;QAC/C/B,WAAW,CAACgC,oBAAZ,CACED,IAAI,CAACE,QADP,EAEEF,IAAI,CAACG,QAFP,EAGEJ,IAHF,EAIEC,IAAI,CAACI,QAJP;MAMD,CAPkB,EAOhB1C,sBAPgB,EAOQ0B,KAPR,CAOc,CAPd,CAAnB;MASAS,IAAI,CAACU,OAAL,GAAe/C,gBAAgB,CAAC2C,QAAhC;MACAN,IAAI,CAACW,IAAL,GAAY,IAAZ;MACAF,UAAU,CAACC,OAAX,GAAqB7C,sBAAsB,CAACyC,QAA5C;MACAG,UAAU,CAACE,IAAX,GAAkB,IAAlB;MACApD,IAAI,CAACqD,SAAL,CAAerB,KAAf;IACD,CA3GkB;;IAAA,MA+GnBsB,iBA/GmB,GA+GC,UAACC,QAAD,EAAWC,KAAX,EAAqB;MACvC,mBAAiL,MAAKlC,KAAtL;MAAA,IAAQnB,aAAR,gBAAQA,aAAR;MAAA,IAAuBE,mBAAvB,gBAAuBA,mBAAvB;MAAA,IAA2CkB,gBAA3C,gBAA2CA,gBAA3C;MAAA,IAA6DE,kBAA7D,gBAA6DA,kBAA7D;MAAA,IAAiFE,eAAjF,gBAAiFA,eAAjF;MAAA,IAAkGD,kBAAlG,gBAAkGA,kBAAlG;MAAA,IAAsHF,eAAtH,gBAAsHA,eAAtH;MAAA,IAAuII,cAAvI,gBAAuIA,cAAvI;MAAA,IAAuJC,qBAAvJ,gBAAuJA,qBAAvJ;;MAEA,IAAI0B,QAAQ,KAAK,WAAjB,EAA8B;QAC5B7C,KAAK,CAAC+C,UAAN,CAAiBC,IAAjB,GAAwBF,KAAxB;QACArD,aAAa,CAACsD,UAAd,CAAyBC,IAAzB,GAAgCF,KAAhC;MACD,CAHD,MAGO,IAAID,QAAQ,KAAK,cAAjB,EAAiC;QACtC5C,OAAO,CAACgD,KAAR,CAAcH,KAAd,GAAsBA,KAAtB;QACA7B,eAAe,CAACgC,KAAhB,GAAwBH,KAAxB;MACD,CAHM,MAGA,IAAID,QAAQ,KAAK,eAAjB,EAAkC;QACvC5C,OAAO,CAACiD,MAAR,GAAiBJ,KAAjB;QACA7B,eAAe,CAACiC,MAAhB,GAAyBJ,KAAzB;MACD,CAHM,MAGA,IAAID,QAAQ,KAAK,eAAjB,EAAkC;QACvCzC,UAAU,CAAC+C,GAAX,CAAeL,KAAf,GAAuBA,KAAvB;QACA9B,kBAAkB,CAACmC,GAAnB,GAAyBL,KAAzB;MACD,CAHM,MAGA,IAAID,QAAQ,KAAK,gBAAjB,EAAmC;QACxCzC,UAAU,CAACA,UAAX,CAAsB0C,KAAtB,GAA8BA,KAA9B;QACA9B,kBAAkB,CAACZ,UAAnB,GAAgC0C,KAAhC;MACD,CAHM,MAGA,IAAID,QAAQ,KAAK,eAAjB,EAAkC;QACvCtC,UAAU,CAAC4C,GAAX,CAAeL,KAAf,GAAuBA,KAAvB;QACA/B,kBAAkB,CAACoC,GAAnB,GAAyBL,KAAzB;MACD,CAHM,MAGA,IAAID,QAAQ,KAAK,qBAAjB,EAAwC;QAC7CtC,UAAU,CAAC6C,SAAX,CAAqBN,KAArB,GAA6BA,KAA7B;QACA/B,kBAAkB,CAACqC,SAAnB,GAA+BN,KAA/B;MACD,CAHM,MAGA,IAAID,QAAQ,KAAK,iBAAjB,EAAoC;QACzC1C,WAAW,CAAC4C,UAAZ,CAAuBC,IAAvB,GAA8BF,KAA9B;QACAnD,mBAAmB,CAACoD,UAApB,CAA+BC,IAA/B,GAAsCF,KAAtC;MACD,CAHM,MAGA,IAAID,QAAQ,KAAK,kBAAjB,EAAqC;QAC1C3C,QAAQ,CAACmD,QAAT,CAAkBP,KAAlB,GAA0BA,KAA1B;QACAjC,gBAAgB,CAACwC,QAAjB,GAA4BP,KAA5B;MACD,CAHM,MAGA,IAAID,QAAQ,KAAK,aAAjB,EAAgC;QACrC3C,QAAQ,CAACiD,GAAT,CAAaL,KAAb,GAAqBA,KAArB;QACAjC,gBAAgB,CAACsC,GAAjB,GAAuBL,KAAvB;MACD,CAHM,MAGA,IAAID,QAAQ,KAAK,kBAAjB,EAAqC;QAC1CS,QAAQ,CAACH,GAAT,CAAaL,KAAb,GAAqBA,KAArB;QACAS,gBAAgB,CAACJ,GAAjB,GAAuBL,KAAvB;MACD,CAHM,MAGA,IAAID,QAAQ,KAAK,wBAAjB,EAA2C;QAChDrC,aAAa,CAACgD,SAAd,CAAwBV,KAAxB,GAAgCA,KAAhC;QACA3B,qBAAqB,CAACqC,SAAtB,GAAkCV,KAAlC;MACD;;MAGD,MAAKW,QAAL,CAAc;QACZ9D,mBAAmB,EAAnBA,mBADY;QAEZkB,gBAAgB,EAAhBA,gBAFY;QAGZpB,aAAa,EAAbA,aAHY;QAIZwB,eAAe,EAAfA,eAJY;QAKZC,cAAc,EAAdA,cALY;QAMZJ,eAAe,EAAfA,eANY;QAOZK,qBAAqB,EAArBA,qBAPY;QAQZH,kBAAkB,EAAlBA,kBARY;QASZD,kBAAkB,EAAlBA;MATY,CAAd;IAWD,CApKkB;;IAGjB,IAAME,gBAAe,GAAG;MACtBkC,GAAG,EAAE,CADiB;MAEtBC,SAAS,EAAE,IAFW;MAGtBJ,IAAI,EAAE,MAHgB;MAItBC,KAAK,EAAE,CAJe;MAKtBC,MAAM,EAAE;IALc,CAAxB;IAQA,IAAMpC,gBAAe,GAAG;MACtBqC,GAAG,EAAE,CADiB;MAEtBO,aAAa,EAAE,GAFO;MAGtBC,OAAO,EAAE,CAHa;MAItBC,WAAW,EAAC,GAJU;MAKtBC,CAAC,EAAE,CALmB;MAMtBC,IAAI,EAAE,CANgB;MAOtBC,QAAQ,EAAE;IAPY,CAAxB;IAUA,IAAMhD,mBAAkB,GAAG;MACzBoC,GAAG,EAAE,CADoB;MAEzBH,IAAI,EAAE,MAFmB;MAGzBI,SAAS,EAAE,CAHc;MAIzBH,KAAK,EAAE;IAJkB,CAA3B;IAOA,IAAMjC,mBAAkB,GAAG;MACzBmC,GAAG,EAAE,CADoB;MAEzB/C,UAAU,EAAE,EAFa;MAGzB4D,UAAU,EAAE;IAHa,CAA3B;IAMA,IAAM9C,eAAc,GAAG;MACrBiC,GAAG,EAAE,CADgB;MAErBH,IAAI,EAAE,MAFe;MAGrBI,SAAS,EAAE,CAHU;MAIrBI,SAAS,EAAE,CAJU;MAKrBP,KAAK,EAAE,GALc;MAMrBC,MAAM,EAAE;IANa,CAAvB;IASA,IAAMrC,iBAAgB,GAAG;MACvBsC,GAAG,EAAE,CADkB;MAEvBE,QAAQ,EAAE,CAFa;MAGvBY,SAAS,EAAE;IAHY,CAAzB;IAMA,IAAM9C,sBAAqB,GAAG;MAAEgC,GAAG,EAAE,GAAP;MAAYK,SAAS,EAAE,GAAvB;MAA4BU,YAAY,EAAE;IAA1C,CAA9B;IAEA,MAAKtD,KAAL,GAAa;MACXnB,aAAa,EAAbA,aADW;MAEXE,mBAAmB,EAAnBA,mBAFW;MAGXmB,eAAe,EAAfA,gBAHW;MAIXD,gBAAgB,EAAhBA,iBAJW;MAKXK,cAAc,EAAdA,eALW;MAMXF,kBAAkB,EAAlBA,mBANW;MAOXC,eAAe,EAAfA,gBAPW;MAQXE,qBAAqB,EAArBA,sBARW;MASXJ,kBAAkB,EAAlBA;IATW,CAAb;IAnDiB;EA8DlB;;;;WAwGD,kBAAS;MACP,mBAAiM,KAAKH,KAAtM;MAAA,IAAQnB,aAAR,gBAAQA,aAAR;MAAA,IAAuBE,mBAAvB,gBAAuBA,mBAAvB;MAAA,IAA4CkB,gBAA5C,gBAA4CA,gBAA5C;MAAA,IAA8DE,kBAA9D,gBAA8DA,kBAA9D;MAAA,IAAkFC,kBAAlF,gBAAkFA,kBAAlF;MAAA,IAAsGF,eAAtG,gBAAsGA,eAAtG;MAAA,IAAuHG,eAAvH,gBAAuHA,eAAvH;MAAA,IAAwIkD,aAAxI,gBAAwIA,aAAxI;MAAA,IAAuJjD,cAAvJ,gBAAuJA,cAAvJ;MAAA,IAAuKC,qBAAvK,gBAAuKA,qBAAvK;MAEA,IAAMiD,OAAO,GAAG,CAAC,MAAD,EAAS,QAAT,EAAmB,UAAnB,EAA+B,UAA/B,CAAhB;MACA,IAAMC,UAAU,GAAG,CAAC,MAAD,EAAS,QAAT,EAAmB,UAAnB,EAA+B,UAA/B,CAAnB;MACA,IAAMlB,GAAG,GAAG,CAAC,GAAD,EAAM,GAAN,CAAZ;MAEA,oBACE;QAAK,SAAS,EAAC,WAAf;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACE,oBAAC,SAAD;QACE,IAAI,EAAC,OADP;QAEE,WAAW,EAAE,KAAKxC,WAFpB;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EADF,eAKA;QAAK,SAAS,EAAC,oBAAf;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACA;QAAK,SAAS,EAAC,OAAf;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACE;QAAK,SAAS,EAAC,aAAf;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACI,oBAAC,kBAAD;QACE,IAAI,EAAC,MADP;QAEE,OAAO,EAAEyD,OAFX;QAGE,KAAK,EAAE3E,aAAa,CAACsD,UAAd,CAAyBC,IAHlC;QAIE,QAAQ,EAAC,WAJX;QAKE,YAAY,EAAE,KAAKJ,iBALrB;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EADJ,eASE;QAAK,SAAS,EAAC,SAAf;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACE;QAAK,SAAS,EAAC,gBAAf;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACA,oBAAC,SAAD;QACE,IAAI,EAAC,eADP;QAEE,GAAG,EAAE,CAFP;QAGE,GAAG,EAAE,CAHP;QAIE,IAAI,EAAE,IAJR;QAKE,KAAK,EAAE3B,eAAe,CAACgC,KALzB;QAME,QAAQ,EAAC,cANX;QAOE,YAAY,EAAE,KAAKL,iBAPrB;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EADA,eAUA,oBAAC,SAAD;QACE,IAAI,EAAC,gBADP;QAEE,GAAG,EAAE,CAFP;QAGE,GAAG,EAAE,GAHP;QAIE,IAAI,EAAE,CAJR;QAKE,KAAK,EAAE3B,eAAe,CAACiC,MALzB;QAME,QAAQ,EAAC,eANX;QAOE,YAAY,EAAE,KAAKN,iBAPrB;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAVA,eAmBA,oBAAC,SAAD;QACE,IAAI,EAAC,gBADP;QAEE,GAAG,EAAE,CAFP;QAGE,GAAG,EAAE,GAHP;QAIE,IAAI,EAAE,GAJR;QAKE,KAAK,EAAE7B,kBAAkB,CAACqC,SAL5B;QAME,QAAQ,EAAC,qBANX;QAOE,YAAY,EAAE,KAAKR,iBAPrB;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAnBA,eA4BA,oBAAC,SAAD;QACE,IAAI,EAAC,mBADP;QAEE,GAAG,EAAE,CAFP;QAGE,GAAG,EAAE,CAHP;QAIE,IAAI,EAAE,GAJR;QAKE,KAAK,EAAEzB,qBAAqB,CAACiC,SAL/B;QAME,QAAQ,EAAC,kBANX;QAOE,YAAY,EAAE,KAAKR,iBAPrB;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EA5BA,CADF,eAwCA;QAAK,SAAS,EAAC,gBAAf;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACE,oBAAC,SAAD;QACE,IAAI,EAAC,gBADP;QAEE,GAAG,EAAE,CAFP;QAGE,GAAG,EAAE,CAHP;QAIE,IAAI,EAAE,GAJR;QAKE,KAAK,EAAE5B,kBAAkB,CAACmC,GAL5B;QAME,QAAQ,EAAC,eANX;QAOE,YAAY,EAAE,KAAKP,iBAPrB;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EADF,eAUE,oBAAC,SAAD;QACE,IAAI,EAAC,iBADP;QAEE,GAAG,EAAE,CAFP;QAGE,GAAG,EAAE,GAHP;QAIE,IAAI,EAAE,CAJR;QAKE,KAAK,EAAE5B,kBAAkB,CAACsD,IAL5B;QAME,QAAQ,EAAC,gBANX;QAOE,YAAY,EAAE,KAAK1B,iBAPrB;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAVF,eAmBE,oBAAC,SAAD;QACE,IAAI,EAAC,gBADP;QAEE,GAAG,EAAE,CAFP;QAGE,GAAG,EAAE,CAHP;QAIE,IAAI,EAAE,IAJR;QAKE,KAAK,EAAE7B,kBAAkB,CAACoC,GAL5B;QAME,QAAQ,EAAC,eANX;QAOE,YAAY,EAAE,KAAKP,iBAPrB;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAnBF,eA4BE,oBAAC,SAAD;QACE,IAAI,EAAC,yBADP;QAEE,GAAG,EAAE,CAFP;QAGE,GAAG,EAAE,CAHP;QAIE,IAAI,EAAE,IAJR;QAKE,KAAK,EAAEzB,qBAAqB,CAACqC,SAL/B;QAME,QAAQ,EAAC,wBANX;QAOE,YAAY,EAAE,KAAKZ,iBAPrB;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EA5BF,CAxCA,CATF,CADF,eA0FI;QAAG,SAAS,EAAC,SAAb;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,sBA1FJ,CADA,eA6FI;QAAK,SAAS,EAAC,QAAf;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACF;QAAK,SAAS,EAAC,cAAf;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACA,oBAAC,kBAAD;QACE,IAAI,EAAC,MADP;QAEE,OAAO,EAAEyB,UAFX;QAGE,KAAK,EAAE1E,mBAAmB,CAACoD,UAApB,CAA+BC,IAHxC;QAIE,QAAQ,EAAC,iBAJX;QAKE,YAAY,EAAE,KAAKJ,iBALrB;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EADA,eAQA;QAAK,SAAS,EAAC,SAAf;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACE;QAAK,SAAS,EAAC,gBAAf;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACA,oBAAC,SAAD;QACE,IAAI,EAAC,mBADP;QAEE,GAAG,EAAE,CAFP;QAGE,GAAG,EAAE,CAHP;QAIE,IAAI,EAAE,IAJR;QAKE,KAAK,EAAE/B,gBAAgB,CAACwC,QAL1B;QAME,QAAQ,EAAC,kBANX;QAOE,YAAY,EAAE,KAAKT,iBAPrB;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EADA,CADF,eAYI;QAAK,SAAS,EAAC,gBAAf;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACA,oBAAC,SAAD;QACE,IAAI,EAAC,cADP;QAEE,GAAG,EAAE,CAFP;QAGE,GAAG,EAAE,CAHP;QAIE,IAAI,EAAE,IAJR;QAKE,KAAK,EAAE/B,gBAAgB,CAACsC,GAL1B;QAME,QAAQ,EAAC,aANX;QAOE,YAAY,EAAE,KAAKP,iBAPrB;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EADA,CAZJ,CARA,CADE,eAqCR;QAAK,SAAS,EAAC,QAAf;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EArCQ,CA7FJ,CALA,CADF;IA8ID;;;;EA5ToCpD,S;;SAAlBiB,S"},"metadata":{},"sourceType":"module"}