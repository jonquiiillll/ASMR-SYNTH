{"ast":null,"code":"var _jsxFileName = \"/Users/olgapavlova/Desktop/Art-practise/ADC-Generative-Art-Boilerplate-2023/app/javascript/prototypes/prototype_13/Container.jsx\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nimport * as Tone from 'tone';\nimport React, { Component } from 'react';\nimport * as bassSettings from './tunes/bass.js';\nimport * as melodySettings from './tunes/melody.js';\nimport * as drumsSettings from './tunes/drums.js';\nimport ToneSynth from './modules/ToneSynth.jsx';\nimport Channel from './modules/Channel.jsx';\nimport SC_ToggleButtonSet from './components/SC_ToggleButtonSet';\nimport SC_Button from './components/SC_Button';\nimport SC_Slider from './components/SC_Slider';\nimport SC_Knob from './components/SC_Knob';\nvar bassSynth;\nvar bassChorus;\nvar bassVibrato;\nvar bassAutoWah;\nvar bassDistorion;\nvar bassPingPongDelay;\nvar melodySynth;\nvar melodyChorus;\nvar melodyVibrato;\nvar melodyAutoWah;\nvar melodyDistorion;\nvar melodyPingPongDelay;\nvar samplerChannel;\nvar samplerChorus;\n\nvar Container = /*#__PURE__*/function (_Component) {\n  _inherits(Container, _Component);\n\n  var _super = _createSuper(Container);\n\n  function Container(props) {\n    var _this;\n\n    _classCallCheck(this, Container);\n\n    _this = _super.call(this, props);\n\n    _this.handleStart = function () {\n      var _this$state = _this.state,\n          bassSettings = _this$state.bassSettings,\n          melodySettings = _this$state.melodySettings,\n          drumsSettings = _this$state.drumsSettings; //\n      //\n\n      bassSynth = new Tone.Synth(bassSettings.synth);\n      bassSynth = new Tone.Synth(melodySettings.synth);\n      bassAutoWah = new Tone.AutoWah(melodySettings.autoWah);\n      bassDistorion = new Tone.Distortion(melodySettings.distortion);\n      bassChorus = new Tone.Chorus(melodySettings.chorus).start();\n      bassVibrato = new Tone.Vibrato(melodySettings.vibrato);\n      bassPingPongDelay = new Tone.PingPongDelay(bassSettings.pingPongDelay).toDestination();\n      samplerChorus = new Tone.Chorus(drumsSettings.chorus).start();\n      bassPingPongDelay = new Tone.PingPongDelay(bassSettings.pingPongDelay).toDestination();\n      bassSynth.chain(bassChorus, bassDistorion, bassPingPongDelay, bassVibrato, bassAutoWah);\n      var bassPart = new Tone.Part(function (time, note) {\n        bassSynth.triggerAttackRelease(note.noteName, note.duration, time, note.velocity);\n      }, bassSettings.sequence.steps).start(0);\n      bassPart.loopEnd = bassSettings.sequence.duration;\n      bassPart.loop = bassSettings.sequence.loop; //\n      //\n\n      melodySynth = new Tone.Synth(melodySettings.synth);\n      melodyAutoWah = new Tone.AutoWah(melodySettings.autoWah);\n      melodyDistorion = new Tone.Distortion(melodySettings.distortion);\n      melodyChorus = new Tone.Chorus(melodySettings.chorus).start();\n      melodyVibrato = new Tone.Vibrato(melodySettings.vibrato);\n      melodyPingPongDelay = new Tone.PingPongDelay(melodySettings.pingPongDelay).toDestination();\n      melodySynth.chain(melodyChorus, melodyDistorion, melodyPingPongDelay, melodyVibrato, melodyAutoWah);\n      var melodyPart = new Tone.Part(function (time, note) {\n        melodySynth.triggerAttackRelease(note.noteName, note.duration, time, note.velocity);\n      }, melodySettings.sequence.steps).start(0);\n      melodyPart.loopEnd = melodySettings.sequence.duration;\n      melodyPart.loop = melodySettings.sequence.loop; //\n      //\n\n      var sampler = new Tone.Sampler({\n        urls: {\n          A1: 'crunchA1.mp3',\n          A2: 'crunchA2.mp3'\n        },\n        baseUrl: 'http://localhost:3000/samples/'\n      });\n      samplerChannel = new Tone.Channel(drumsSettings.channel).toDestination();\n      sampler.chain(samplerChorus, samplerChannel);\n      var drumsPart = new Tone.Part(function (time, note) {\n        sampler.triggerAttackRelease(note.noteName, note.duration, time, note.velocity);\n      }, drumsSettings.sequence.steps).start(0);\n      drumsPart.loopEnd = drumsSettings.sequence.duration;\n      drumsPart.loop = drumsSettings.sequence.loop;\n      var samplerTwo = new Tone.Sampler({\n        urls: {\n          A1: 'knockingA1.mp3',\n          A2: 'knockingA2.mp3'\n        },\n        baseUrl: 'http://localhost:3000/samples/'\n      });\n      samplerChannelTwo = new Tone.Channel(drumsSettings.channelTwo).toDestination();\n      samplerTwo.chain(samplerChannelTwo);\n      var drumsPartTwo = new Tone.Part(function (time, note) {\n        samplerTwo.triggerAttackRelease(note.noteName, note.duration, time, note.velocity);\n      }, drumsSettings.sequenceTwo.steps).start(0);\n      drumsPartTwo.loopEnd = drumsSettings.sequenceTwo.duration;\n      drumsPartTwo.loop = drumsSettings.sequenceTwo.loop;\n      var samplerThird = new Tone.Sampler({\n        urls: {\n          A1: 'sizzleA1.mp3',\n          A2: 'sizzleA3.mp3'\n        },\n        baseUrl: 'http://localhost:3000/samples/'\n      });\n      samplerChannelThird = new Tone.Channel(drumsSettings.channelThird).toDestination();\n      samplerThird.chain(samplerChannelThird);\n      var drumsPartThird = new Tone.Part(function (time, note) {\n        samplerThird.triggerAttackRelease(note.noteName, note.duration, time, note.velocity);\n      }, drumsSettings.sequenceThird.steps).start(0);\n      drumsPartThird.loopEnd = drumsSettings.sequenceThird.duration;\n      drumsPartThird.loop = drumsSettings.sequenceThird.loop;\n      var samplerForth = new Tone.Sampler({\n        urls: {\n          A1: 'drumA2.mp3',\n          A2: 'drumA3.mp3'\n        },\n        baseUrl: 'http://localhost:3000/samples/'\n      });\n      samplerChannelForth = new Tone.Channel(drumsSettings.channelForth).toDestination();\n      samplerForth.chain(samplerChannelForth);\n      var drumsPartForth = new Tone.Part(function (time, note) {\n        samplerForth.triggerAttackRelease(note.noteName, note.duration, time, note.velocity);\n      }, drumsSettings.sequenceForth.steps).start(0);\n      drumsPartForth.loopEnd = drumsSettings.sequenceForth.duration;\n      drumsPartForth.loop = drumsSettings.sequenceForth.loop;\n      var samplerFifth = new Tone.Sampler({\n        urls: {\n          A1: 'melodyA1.mp3',\n          A2: 'melodyA2.mp3',\n          A3: 'melodyA3.mp3'\n        },\n        baseUrl: 'http://localhost:3000/samples/'\n      });\n      samplerChannelFifthPingPongDelay = new Tone.PingPongDelay(drumsSettings.pingPongDelay).toDestination();\n      samplerChannelFifth = new Tone.Channel(drumsSettings.channelFifth).toDestination();\n      samplerFifth.chain(samplerChannelFifth, samplerChannelFifthPingPongDelay);\n      var drumsPartFifth = new Tone.Part(function (time, note) {\n        samplerFifth.triggerAttackRelease(note.noteName, note.duration, time, note.velocity);\n      }, drumsSettings.sequenceFifth.steps).start(0);\n      drumsPartFifth.loopEnd = drumsSettings.sequenceFifth.duration;\n      drumsPartFifth.loop = drumsSettings.sequenceFifth.loop;\n      var samplerSix = new Tone.Sampler({\n        urls: {\n          A2: 'nice.mp3'\n        },\n        baseUrl: 'http://localhost:3000/samples/'\n      });\n      samplerChannelSix = new Tone.Channel(drumsSettings.channelSix).toDestination();\n      samplerSix.chain(samplerChannelSix);\n      var drumsPartSix = new Tone.Part(function (time, note) {\n        samplerSix.triggerAttackRelease(note.noteName, note.duration, time, note.velocity);\n      }, drumsSettings.sequenceSix.steps).start(0);\n      drumsPartSix.loopEnd = drumsSettings.sequenceSix.duration;\n      drumsPartSix.loop = drumsSettings.sequenceSix.loop;\n\n      _this.setState({\n        isStarted: true\n      });\n\n      Tone.Transport.start();\n    };\n\n    _this.handleBassValueChange = function (property, value) {\n      var bassSettings = _this.state.bassSettings;\n\n      if (property === 'synthType') {\n        bassSynth.oscillator.type = value;\n        melodySettings.synth.oscillator.type = value;\n      } else if (property === 'synthEnvelopeAttack') {\n        bassSynth.envelope.attack = value;\n        bassSettings.synth.envelope.attack = value;\n      } else if (property === 'synthEnvelopeDecay') {\n        bassSynth.envelope.decay = value;\n        bassSettings.synth.envelope.decay = value;\n      } else if (property === 'synthEnvelopeSustain') {\n        bassSynth.envelope.sustain = value;\n        bassSettings.synth.envelope.sustain = value;\n      } else if (property === 'synthEnvelopeRelease') {\n        bassSynth.envelope.release = value;\n        bassSettings.synth.envelope.release = value;\n      } else if (property === 'pingPongDelayWet') {\n        bassPingPongDelay.wet.value = value;\n        bassSettings.pingPongDelay.wet = value;\n      } else if (property === 'chorusWet') {\n        bassChorus.wet.value = value;\n        bassSettings.chorus.wet = value;\n      } else if (property === 'synthVolume') {\n        bassSynth.volume.value = value;\n        bassSettings.synth.volume = value;\n      } else if (property === 'synthVibratoWet') {\n        bassVibrato.wet.value = value;\n        bassSettings.vibrato.wet = value;\n      } else if (property === 'AutoWahWet') {\n        bassAutoWah.wet.value = value;\n        bassSettings.autoWah.wet = value;\n      } else if (property === 'distortionWet') {\n        bassDistorion.wet.value = value;\n        bassSettings.distortion.wet = value;\n      } else if (property === 'distortionDistortion') {\n        bassDistorion.distortion = value;\n        bassSettings.distortion.distortion = value;\n      } else if (property === 'pingPongDelayDelay') {\n        bassPingPongDelay.delayTime.value = value;\n        bassSettings.pingPongDelay.delayTime = value;\n      }\n\n      _this.setState({\n        bassSettings: bassSettings\n      });\n    };\n\n    _this.handleMelodyValueChange = function (property, value) {\n      var melodySettings = _this.state.melodySettings;\n\n      if (property === 'synthType') {\n        melodySynth.oscillator.type = value;\n        melodySettings.synth.oscillator.type = value;\n      } else if (property === 'synthEnvelopeAttack') {\n        melodySynth.envelope.attack = value;\n        melodySettings.synth.envelope.attack = value;\n      } else if (property === 'synthEnvelopeDecay') {\n        melodySynth.envelope.decay = value;\n        melodySettings.synth.envelope.decay = value;\n      } else if (property === 'synthEnvelopeSustain') {\n        melodySynth.envelope.sustain = value;\n        melodySettings.synth.envelope.sustain = value;\n      } else if (property === 'synthEnvelopeRelease') {\n        melodySynth.envelope.release = value;\n        melodySettings.synth.envelope.release = value;\n      } else if (property === 'pingPongDelayWet') {\n        melodyPingPongDelay.wet.value = value;\n        melodySettings.pingPongDelay.wet = value;\n      } else if (property === 'chorusWet') {\n        melodyChorus.wet.value = value;\n        melodySettings.chorus.wet = value;\n      } else if (property === 'synthVolume') {\n        melodySynth.volume.value = value;\n        melodySettings.synth.volume = value;\n      } else if (property === 'synthVibratoWet') {\n        melodyVibrato.wet.value = value;\n        melodySettings.vibrato.wet = value;\n      } else if (property === 'AutoWahWet') {\n        melodyAutoWah.wet.value = value;\n        melodySettings.autoWah.wet = value;\n      } else if (property === 'distortionWet') {\n        melodyDistorion.wet.value = value;\n        melodySettings.distortion.wet = value;\n      } else if (property === 'distortionDistortion') {\n        melodyDistorion.distortion = value;\n        melodySettings.distortion.distortion = value;\n      } else if (property === 'pingPongDelayDelay') {\n        melodyPingPongDelay.delayTime.value = value;\n        melodySettings.pingPongDelay.delayTime = value;\n      } else if (property === 'synthChorusSpread') {\n        melodyChorus.spread = value;\n        melodySettings.chorus.spread = value;\n      }\n\n      _this.setState({\n        melodySettings: melodySettings\n      });\n    };\n\n    _this.handleDrumsValueChange = function (property, value) {\n      var drumsSettings = _this.state.drumsSettings;\n\n      if (property === 'channelVolume') {\n        samplerChannel.volume.value = value;\n        drumsSettings.channel.volume = value;\n      } else if (property === 'channelMute') {\n        samplerChannel.mute = value;\n        drumsSettings.channel.mute = value;\n      } else if (property === 'channelChorus') {\n        samplerChorus.wet.value = value;\n        drumsSettings.chorus.wet = value;\n      } else if (property === 'channelVolumeTwo') {\n        samplerChannelTwo.volume.value = value;\n        drumsSettings.channelTwo.volume = value;\n      } else if (property === 'channelTwoMute') {\n        samplerChannelTwo.mute = value;\n        samplerChannelTwo.text = \"ON\";\n        drumsSettings.channelTwo.mute = value;\n      } else if (property === 'channelVolumeFifth') {\n        samplerChannelFifth.volume.value = value;\n        drumsSettings.channelFifth.volume = value;\n      } else if (property === 'channelFifthMute') {\n        samplerChannelFifth.mute = value;\n        drumsSettings.channelFifth.mute = value;\n      } else if (property === 'pingPongDelayWet') {\n        samplerChannelFifthPingPongDelay.wet.value = value;\n        drumsSettings.pingPongDelay.wet = value;\n      } else if (property === 'channelVolumeThird') {\n        samplerChannelThird.volume.value = value;\n        drumsSettings.channelThird.volume = value;\n      } else if (property === 'channelThirdMute') {\n        samplerChannelThird.mute = value;\n        drumsSettings.channelThird.mute = value;\n      } else if (property === 'channelVolumeForth') {\n        samplerChannelForth.volume.value = value;\n        drumsSettings.channelForth.volume = value;\n      } else if (property === 'channelForthMute') {\n        samplerChannelForth.mute = value;\n        drumsSettings.channelForth.mute = value;\n      } else if (property === 'channelSixMute') {\n        samplerChannelSix.mute = value;\n        drumsSettings.channelSix.mute = value;\n      }\n\n      _this.setState({\n        drumsSettings: drumsSettings\n      });\n    };\n\n    _this.renderStartButton = function () {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"left_container\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"StartWindow\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"ButtonStart\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(SC_Button, {\n        text: \"Start\",\n        handleClick: _this.handleStart,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 11\n        }\n      }))));\n    };\n\n    _this.renderUI = function () {\n      var _this$state2 = _this.state,\n          isUIShown = _this$state2.isUIShown,\n          bassSettings = _this$state2.bassSettings,\n          melodySettings = _this$state2.melodySettings,\n          drumsSettings = _this$state2.drumsSettings;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"rendered_container\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"instruments\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text_container\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"description\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 7\n        }\n      }, \" I. BASS \"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"description margin-left\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 7\n        }\n      }, \" II. MELODY\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"description margin-lefts\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 7\n        }\n      }, \" III. SAMPLES\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"voices\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"settings\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(ToneSynth, {\n        settings: melodySettings,\n        handleValueChange: _this.handleMelodyValueChange,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(ToneSynth, {\n        settings: bassSettings,\n        handleValueChange: _this.handleBassValueChange,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container_voices\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"green_container\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 7\n        }\n      }, \"STAY IN TOUCH\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"drums_container\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Channel, {\n        settings: drumsSettings,\n        handleValueChange: _this.handleDrumsValueChange,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 14\n        }\n      }))))));\n    };\n\n    _this.state = {\n      isStarted: false,\n      isUIShown: false,\n      bassSettings: bassSettings,\n      melodySettings: melodySettings,\n      drumsSettings: drumsSettings\n    };\n    return _this;\n  }\n\n  _createClass(Container, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state3 = this.state,\n          isStarted = _this$state3.isStarted,\n          isUIShown = _this$state3.isUIShown;\n      var _this$state4 = this.state,\n          bassSettings = _this$state4.bassSettings,\n          melodySettings = _this$state4.melodySettings,\n          drumsSettings = _this$state4.drumsSettings;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"Container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 7\n        }\n      }, isStarted ? this.renderUI() : this.renderStartButton());\n    }\n  }]);\n\n  return Container;\n}(Component);\n\nexport { Container as default };","map":{"version":3,"names":["Tone","React","Component","bassSettings","melodySettings","drumsSettings","ToneSynth","Channel","SC_ToggleButtonSet","SC_Button","SC_Slider","SC_Knob","bassSynth","bassChorus","bassVibrato","bassAutoWah","bassDistorion","bassPingPongDelay","melodySynth","melodyChorus","melodyVibrato","melodyAutoWah","melodyDistorion","melodyPingPongDelay","samplerChannel","samplerChorus","Container","props","handleStart","state","Synth","synth","AutoWah","autoWah","Distortion","distortion","Chorus","chorus","start","Vibrato","vibrato","PingPongDelay","pingPongDelay","toDestination","chain","bassPart","Part","time","note","triggerAttackRelease","noteName","duration","velocity","sequence","steps","loopEnd","loop","melodyPart","sampler","Sampler","urls","A1","A2","baseUrl","channel","drumsPart","samplerTwo","samplerChannelTwo","channelTwo","drumsPartTwo","sequenceTwo","samplerThird","samplerChannelThird","channelThird","drumsPartThird","sequenceThird","samplerForth","samplerChannelForth","channelForth","drumsPartForth","sequenceForth","samplerFifth","A3","samplerChannelFifthPingPongDelay","samplerChannelFifth","channelFifth","drumsPartFifth","sequenceFifth","samplerSix","samplerChannelSix","channelSix","drumsPartSix","sequenceSix","setState","isStarted","Transport","handleBassValueChange","property","value","oscillator","type","envelope","attack","decay","sustain","release","wet","volume","delayTime","handleMelodyValueChange","spread","handleDrumsValueChange","mute","text","renderStartButton","renderUI","isUIShown"],"sources":["/Users/olgapavlova/Desktop/Art-practise/ADC-Generative-Art-Boilerplate-2023/app/javascript/prototypes/prototype_13/Container.jsx"],"sourcesContent":["import * as Tone from 'tone'\nimport React, { Component } from 'react'\n\nimport * as bassSettings from './tunes/bass.js'\nimport * as melodySettings from './tunes/melody.js'\nimport * as drumsSettings from './tunes/drums.js'\n\nimport ToneSynth from './modules/ToneSynth.jsx'\n\nimport Channel from './modules/Channel.jsx'\n\nimport SC_ToggleButtonSet from './components/SC_ToggleButtonSet'\nimport SC_Button from './components/SC_Button'\nimport SC_Slider from './components/SC_Slider'\nimport SC_Knob from './components/SC_Knob'\n\nlet bassSynth\nlet bassChorus\nlet bassVibrato\nlet bassAutoWah\nlet bassDistorion\nlet bassPingPongDelay\n\nlet melodySynth\nlet melodyChorus\nlet melodyVibrato\nlet melodyAutoWah\nlet melodyDistorion\nlet melodyPingPongDelay\n\nlet samplerChannel\nlet samplerChorus\n\n\nexport default class Container extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      isStarted: false,\n      isUIShown: false,\n      bassSettings,\n      melodySettings,\n      drumsSettings\n    }\n  }\n\n  handleStart = () => {\n    const { bassSettings, melodySettings, drumsSettings } = this.state\n    //\n    //\n    bassSynth = new Tone.Synth(bassSettings.synth)\n    bassSynth = new Tone.Synth(melodySettings.synth)\n    bassAutoWah = new Tone.AutoWah(melodySettings.autoWah)\n    bassDistorion = new Tone.Distortion(melodySettings.distortion)\n    bassChorus = new Tone.Chorus(melodySettings.chorus).start()\n    bassVibrato = new Tone.Vibrato(melodySettings.vibrato)\n\n    bassPingPongDelay = new Tone.PingPongDelay(\n      bassSettings.pingPongDelay\n    ).toDestination()\n\n    samplerChorus = new Tone.Chorus(drumsSettings.chorus).start()\n\n    bassPingPongDelay = new Tone.PingPongDelay(\n      bassSettings.pingPongDelay\n    ).toDestination()\n\n    bassSynth.chain(bassChorus, bassDistorion, bassPingPongDelay, bassVibrato, bassAutoWah )\n\n    const bassPart = new Tone.Part((time, note) => {\n      bassSynth.triggerAttackRelease(\n        note.noteName,\n        note.duration,\n        time,\n        note.velocity\n      )\n    }, bassSettings.sequence.steps).start(0)\n\n    bassPart.loopEnd = bassSettings.sequence.duration\n    bassPart.loop = bassSettings.sequence.loop\n    //\n    //\n    melodySynth = new Tone.Synth(melodySettings.synth)\n    melodyAutoWah = new Tone.AutoWah(melodySettings.autoWah)\n    melodyDistorion = new Tone.Distortion(melodySettings.distortion)\n    melodyChorus = new Tone.Chorus(melodySettings.chorus).start()\n    melodyVibrato = new Tone.Vibrato(melodySettings.vibrato)\n\n    melodyPingPongDelay = new Tone.PingPongDelay(\n      melodySettings.pingPongDelay\n    ).toDestination()\n\n    melodySynth.chain(melodyChorus, melodyDistorion, melodyPingPongDelay, melodyVibrato, melodyAutoWah )\n\n    const melodyPart = new Tone.Part((time, note) => {\n      melodySynth.triggerAttackRelease(\n        note.noteName,\n        note.duration,\n        time,\n        note.velocity\n      )\n    }, melodySettings.sequence.steps).start(0)\n\n    melodyPart.loopEnd = melodySettings.sequence.duration\n    melodyPart.loop = melodySettings.sequence.loop\n    //\n    //\n    const sampler = new Tone.Sampler({\n      urls: {\n        A1: 'crunchA1.mp3',\n        A2: 'crunchA2.mp3'\n      },\n      baseUrl: 'http://localhost:3000/samples/'\n    })\n\n    samplerChannel = new Tone.Channel(drumsSettings.channel).toDestination()\n    sampler.chain( samplerChorus, samplerChannel)\n\n    const drumsPart = new Tone.Part((time, note) => {\n      sampler.triggerAttackRelease(\n        note.noteName,\n        note.duration,\n        time,\n        note.velocity\n      )\n    }, drumsSettings.sequence.steps).start(0)\n\n    drumsPart.loopEnd = drumsSettings.sequence.duration\n    drumsPart.loop = drumsSettings.sequence.loop\n\n    const samplerTwo = new Tone.Sampler({\n      urls: {\n        A1: 'knockingA1.mp3',\n        A2: 'knockingA2.mp3'\n      },\n      baseUrl: 'http://localhost:3000/samples/'\n    })\n    samplerChannelTwo = new Tone.Channel(drumsSettings.channelTwo).toDestination()\n    samplerTwo.chain( samplerChannelTwo )\n\n    const drumsPartTwo = new Tone.Part((time, note) => {\n      samplerTwo.triggerAttackRelease(\n        note.noteName,\n        note.duration,\n        time,\n        note.velocity\n      )\n    }, drumsSettings.sequenceTwo.steps).start(0)\n\n    drumsPartTwo.loopEnd = drumsSettings.sequenceTwo.duration\n    drumsPartTwo.loop = drumsSettings.sequenceTwo.loop\n\n    const samplerThird = new Tone.Sampler({\n      urls: {\n        A1: 'sizzleA1.mp3',\n        A2: 'sizzleA3.mp3'\n      },\n      baseUrl: 'http://localhost:3000/samples/'\n    })\n\n    samplerChannelThird = new Tone.Channel(drumsSettings.channelThird).toDestination()\n    samplerThird.chain( samplerChannelThird )\n\n    const drumsPartThird = new Tone.Part((time, note) => {\n      samplerThird.triggerAttackRelease(\n        note.noteName,\n        note.duration,\n        time,\n        note.velocity\n      )\n    }, drumsSettings.sequenceThird.steps).start(0)\n\n    drumsPartThird.loopEnd = drumsSettings.sequenceThird.duration\n    drumsPartThird.loop = drumsSettings.sequenceThird.loop\n\n    const samplerForth = new Tone.Sampler({\n      urls: {\n        A1: 'drumA2.mp3',\n        A2: 'drumA3.mp3'\n      },\n      baseUrl: 'http://localhost:3000/samples/'\n    })\n\n    samplerChannelForth = new Tone.Channel(drumsSettings.channelForth).toDestination()\n    samplerForth.chain( samplerChannelForth )\n\n    const drumsPartForth = new Tone.Part((time, note) => {\n      samplerForth.triggerAttackRelease(\n        note.noteName,\n        note.duration,\n        time,\n        note.velocity\n      )\n    }, drumsSettings.sequenceForth.steps).start(0)\n\n    drumsPartForth.loopEnd = drumsSettings.sequenceForth.duration\n    drumsPartForth.loop = drumsSettings.sequenceForth.loop\n\n    const samplerFifth = new Tone.Sampler({\n      urls: {\n        A1: 'melodyA1.mp3',\n        A2: 'melodyA2.mp3',\n        A3: 'melodyA3.mp3',\n      },\n      baseUrl: 'http://localhost:3000/samples/'\n    })\n\n    samplerChannelFifthPingPongDelay = new Tone.PingPongDelay(\n      drumsSettings.pingPongDelay\n    ).toDestination()\n\n    samplerChannelFifth = new Tone.Channel(drumsSettings.channelFifth).toDestination()\n    samplerFifth.chain( samplerChannelFifth, samplerChannelFifthPingPongDelay  )\n\n    const drumsPartFifth = new Tone.Part((time, note) => {\n      samplerFifth.triggerAttackRelease(\n        note.noteName,\n        note.duration,\n        time,\n        note.velocity\n      )\n    }, drumsSettings.sequenceFifth.steps).start(0)\n\n    drumsPartFifth.loopEnd = drumsSettings.sequenceFifth.duration\n    drumsPartFifth.loop = drumsSettings.sequenceFifth.loop\n\n    const samplerSix = new Tone.Sampler({\n      urls: {\n        A2: 'nice.mp3',\n      },\n      baseUrl: 'http://localhost:3000/samples/'\n    })\n\n    samplerChannelSix = new Tone.Channel(drumsSettings.channelSix).toDestination()\n    samplerSix.chain( samplerChannelSix  )\n\n    const drumsPartSix = new Tone.Part((time, note) => {\n      samplerSix.triggerAttackRelease(\n        note.noteName,\n        note.duration,\n        time,\n        note.velocity\n      )\n    }, drumsSettings.sequenceSix.steps).start(0)\n\n    drumsPartSix.loopEnd = drumsSettings.sequenceSix.duration\n    drumsPartSix.loop = drumsSettings.sequenceSix.loop\n\n    this.setState({\n        isStarted: true\n    })\n\n    Tone.Transport.start()\n  }\n  //\n  //\n\n  handleBassValueChange = (property, value) => {\n    const { bassSettings } = this.state\n\n    if (property === 'synthType') {\n      bassSynth.oscillator.type = value\n      melodySettings.synth.oscillator.type = value\n    } else if (property === 'synthEnvelopeAttack') {\n      bassSynth.envelope.attack = value\n      bassSettings.synth.envelope.attack = value\n    } else if (property === 'synthEnvelopeDecay') {\n      bassSynth.envelope.decay = value\n      bassSettings.synth.envelope.decay = value\n    } else if (property === 'synthEnvelopeSustain') {\n      bassSynth.envelope.sustain = value\n      bassSettings.synth.envelope.sustain = value\n    } else if (property === 'synthEnvelopeRelease') {\n      bassSynth.envelope.release = value\n      bassSettings.synth.envelope.release = value\n    } else if (property === 'pingPongDelayWet') {\n      bassPingPongDelay.wet.value = value\n      bassSettings.pingPongDelay.wet = value\n    } else if (property === 'chorusWet') {\n      bassChorus.wet.value = value\n      bassSettings.chorus.wet = value\n    } else if (property === 'synthVolume') {\n      bassSynth.volume.value = value\n      bassSettings.synth.volume = value\n    } else if (property === 'synthVibratoWet') {\n      bassVibrato.wet.value = value\n      bassSettings.vibrato.wet = value\n    } else if (property === 'AutoWahWet') {\n      bassAutoWah.wet.value = value\n      bassSettings.autoWah.wet = value\n    } else if (property === 'distortionWet') {\n      bassDistorion.wet.value = value\n      bassSettings.distortion.wet = value\n    } else if (property === 'distortionDistortion') {\n      bassDistorion.distortion = value\n      bassSettings.distortion.distortion = value\n    } else if (property === 'pingPongDelayDelay') {\n      bassPingPongDelay.delayTime.value = value\n      bassSettings.pingPongDelay.delayTime = value\n    }\n\n    this.setState({\n      bassSettings\n    })\n  }\n\n  handleMelodyValueChange = (property, value) => {\n    const { melodySettings } = this.state\n\n    if (property === 'synthType') {\n      melodySynth.oscillator.type = value\n      melodySettings.synth.oscillator.type = value\n    } else if (property === 'synthEnvelopeAttack') {\n      melodySynth.envelope.attack = value\n      melodySettings.synth.envelope.attack = value\n    } else if (property === 'synthEnvelopeDecay') {\n      melodySynth.envelope.decay = value\n      melodySettings.synth.envelope.decay = value\n    } else if (property === 'synthEnvelopeSustain') {\n      melodySynth.envelope.sustain = value\n      melodySettings.synth.envelope.sustain = value\n    } else if (property === 'synthEnvelopeRelease') {\n      melodySynth.envelope.release = value\n      melodySettings.synth.envelope.release = value\n    } else if (property === 'pingPongDelayWet') {\n      melodyPingPongDelay.wet.value = value\n      melodySettings.pingPongDelay.wet = value\n    } else if (property === 'chorusWet') {\n      melodyChorus.wet.value = value\n      melodySettings.chorus.wet = value\n    } else if (property === 'synthVolume') {\n      melodySynth.volume.value = value\n      melodySettings.synth.volume = value\n    } else if (property === 'synthVibratoWet') {\n      melodyVibrato.wet.value = value\n      melodySettings.vibrato.wet = value\n    } else if (property === 'AutoWahWet') {\n      melodyAutoWah.wet.value = value\n      melodySettings.autoWah.wet = value\n    } else if (property === 'distortionWet') {\n      melodyDistorion.wet.value = value\n      melodySettings.distortion.wet = value\n    } else if (property === 'distortionDistortion') {\n      melodyDistorion.distortion = value\n      melodySettings.distortion.distortion = value\n    } else if (property === 'pingPongDelayDelay') {\n      melodyPingPongDelay.delayTime.value = value\n      melodySettings.pingPongDelay.delayTime = value\n    } else if (property === 'synthChorusSpread') {\n      melodyChorus.spread = value\n      melodySettings.chorus.spread = value\n    }\n\n    this.setState({\n      melodySettings\n    })\n  }\n\n  handleDrumsValueChange = (property, value) => {\n    const { drumsSettings } = this.state\n\n    if (property === 'channelVolume') {\n      samplerChannel.volume.value = value\n      drumsSettings.channel.volume = value\n    } else if (property === 'channelMute') {\n      samplerChannel.mute = value\n      drumsSettings.channel.mute = value\n    } else if (property === 'channelChorus') {\n      samplerChorus.wet.value = value\n      drumsSettings.chorus.wet = value\n    } else if (property === 'channelVolumeTwo') {\n      samplerChannelTwo.volume.value = value\n      drumsSettings.channelTwo.volume = value\n    } else if (property === 'channelTwoMute') {\n      samplerChannelTwo.mute = value\n      samplerChannelTwo.text = \"ON\"\n      drumsSettings.channelTwo.mute = value\n    } else if (property === 'channelVolumeFifth') {\n      samplerChannelFifth.volume.value = value\n      drumsSettings.channelFifth.volume = value\n    } else if (property === 'channelFifthMute') {\n      samplerChannelFifth.mute = value\n      drumsSettings.channelFifth.mute = value\n    } else if (property === 'pingPongDelayWet') {\n      samplerChannelFifthPingPongDelay.wet.value = value\n      drumsSettings.pingPongDelay.wet = value\n    } else if (property === 'channelVolumeThird') {\n      samplerChannelThird.volume.value = value\n      drumsSettings.channelThird.volume = value\n    } else if (property === 'channelThirdMute') {\n      samplerChannelThird.mute = value\n      drumsSettings.channelThird.mute = value\n    } else if (property === 'channelVolumeForth') {\n      samplerChannelForth.volume.value = value\n      drumsSettings.channelForth.volume = value\n    } else if (property === 'channelForthMute') {\n      samplerChannelForth.mute = value\n      drumsSettings.channelForth.mute = value\n    } else if (property === 'channelSixMute') {\n      samplerChannelSix.mute = value\n      drumsSettings.channelSix.mute = value\n    }\n\n    this.setState({\n      drumsSettings\n    })\n  }\n\n  renderStartButton = () => {\n  return (\n    <div className=\"left_container\">\n      <div className=\"StartWindow\">\n        <div className=\"ButtonStart\">\n          <SC_Button\n            text=\"Start\"\n            handleClick={this.handleStart}\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n\nrenderUI = () => {\n  const {\n    isUIShown,\n    bassSettings,\n    melodySettings,\n    drumsSettings\n  } = this.state\n\n\n  return (\n\n    <div className=\"rendered_container\">\n    <div className =\"instruments\">\n    <div className=\"text_container\">\n      <div className=\"description\"> I. BASS </div>\n      <div className=\"description margin-left\"> II. MELODY</div>\n      <div className=\"description margin-lefts\"> III. SAMPLES</div>\n    </div>\n    <div className=\"voices\">\n      <div className=\"settings\">\n          <ToneSynth\n            settings={melodySettings}\n            handleValueChange={this.handleMelodyValueChange}\n          />\n          <ToneSynth\n            settings={bassSettings}\n            handleValueChange={this.handleBassValueChange}\n          />\n        </div>\n      <div className=\"container_voices\">\n      <div className=\"green_container\">STAY IN TOUCH</div>\n        <div className=\"drums_container\">\n             <Channel\n               settings={drumsSettings}\n               handleValueChange={this.handleDrumsValueChange}\n             />\n          </div>\n        </div>\n        </div>\n      </div>\n    </div>\n  )}\n\n\n  render() {\n    const {isStarted, isUIShown} = this.state\n    const { bassSettings, melodySettings, drumsSettings } = this.state\n\n    return (\n      <div className=\"Container\">\n      {isStarted ? this.renderUI() : this.renderStartButton()}\n      </div>\n    )\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}