{"ast":null,"code":"var _jsxFileName = \"/Users/olgapavlova/Desktop/Art-practise/ADC-Generative-Art-Boilerplate-2023/app/javascript/prototypes/prototype_6/Container.jsx\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nimport React, { Component } from 'react';\nimport * as Tone from 'tone';\nimport SC_Button from './SC_Button';\n\nvar Container = /*#__PURE__*/function (_Component) {\n  _inherits(Container, _Component);\n\n  var _super = _createSuper(Container);\n\n  function Container(props) {\n    var _this;\n\n    _classCallCheck(this, Container);\n\n    _this = _super.call(this, props);\n\n    _this.handleClick = function () {\n      var synthSettings = {\n        volume: -20,\n        detune: 0,\n        portamento: 0.05,\n        envelope: {\n          attack: 0.05,\n          attackCurve: 'exponential',\n          decay: 0.2,\n          decayCurve: 'exponential',\n          sustain: 0.2,\n          release: 1.5,\n          releaseCurve: 'exponential'\n        },\n        oscillator: {\n          type: 'amsine',\n          modulationType: 'sine',\n          // partialCount: 0,\n          // partials: [],\n          phase: 0,\n          harmonicity: 0.5\n        }\n      };\n      var chorusSettings = {\n        wet: 0.8,\n        type: 'sine',\n        frequency: 45,\n        delayTime: 1,\n        depth: 0.44,\n        spread: 180\n      };\n      var distortionSettings = {\n        wet: 0,\n        distortion: 16,\n        oversample: '4x'\n      };\n      var frequencyShifterSettings = {\n        wet: 0,\n        frequency: 42\n      };\n      var freeverbSettings = {\n        wet: 0.9,\n        roomSize: 0.08,\n        dampening: 40\n      };\n      var channelSettings = {\n        volume: 10,\n        pan: 0,\n        mute: false,\n        solo: false\n      };\n      var synthNode = new Tone.Synth(synthSettings);\n      var chorusNode = new Tone.Chorus(chorusSettings);\n      var distortionNode = new Tone.Distortion(distortionSettings);\n      var frequencyShifterNode = new Tone.FrequencyShifter(frequencyShifterSettings);\n      var channelNode = new Tone.Channel(channelSettings).toDestination();\n      synthNode.chain(chorusNode, distortionNode, frequencyShifterNode, channelNode); // const feedbackDelay = new Tone.FeedbackDelay(feedbackDelaySettings).toDestination();\n      //\n      //\n      // const synth = new Tone.Synth(synthSettings)\n      //\n      // const autoWah = new Tone.AutoWah(autoWahSettings).toDestination()\n      //\n      // const channelSettings = { volume: 0, pan: 0, mute: false, solo: false }\n      // const channel = new Tone.Channel(channelSettings).toDestination()\n      //\n      // synth.chain(autoWah, feedbackDelay, channel)\n\n      synthNode.triggerAttackRelease('C4', '1');\n      var sequence = [{\n        time: '0:1:0',\n        noteName: 'A4',\n        duration: '4n',\n        velocity: 1\n      }, {\n        time: '0:1:2',\n        noteName: 'G4',\n        duration: '4n',\n        velocity: 1\n      }, {\n        time: '0:1:3',\n        noteName: 'F4',\n        duration: '1n',\n        velocity: 1\n      }, {\n        time: '0:2:1',\n        noteName: 'D4',\n        duration: '4n',\n        velocity: 1\n      }, {\n        time: '0:2:3',\n        noteName: 'A3',\n        duration: '2n',\n        velocity: 1\n      }, {\n        time: '0:2:4',\n        noteName: 'C4',\n        duration: '4n',\n        velocity: 1\n      }]; // Создаём партию, добавляем в неё секвенцию\n      // и включаем проигрывание\n\n      var part = new Tone.Part(function (time, note) {\n        synthNode.triggerAttackRelease(note.noteName, note.duration, time, note.velocity);\n      }, sequence).start(0); // Указываем длительность партии\n\n      part.loopEnd = '1m'; // Включаем зацикливание\n\n      part.loop = true; // Включаем звук в браузере\n      // sampler.context.resume()\n      // Включаем отсчёт времени в Tone.js\n\n      Tone.Transport.start(); //Запуск синта\n    };\n\n    return _this;\n  } // Собственно синтезатор\n\n\n  _createClass(Container, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"Container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(SC_Button, {\n        text: \"First Melody\",\n        handleClick: this.handleClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return Container;\n}(Component);\n\nexport { Container as default };","map":{"version":3,"names":["React","Component","Tone","SC_Button","Container","props","handleClick","synthSettings","volume","detune","portamento","envelope","attack","attackCurve","decay","decayCurve","sustain","release","releaseCurve","oscillator","type","modulationType","phase","harmonicity","chorusSettings","wet","frequency","delayTime","depth","spread","distortionSettings","distortion","oversample","frequencyShifterSettings","freeverbSettings","roomSize","dampening","channelSettings","pan","mute","solo","synthNode","Synth","chorusNode","Chorus","distortionNode","Distortion","frequencyShifterNode","FrequencyShifter","channelNode","Channel","toDestination","chain","triggerAttackRelease","sequence","time","noteName","duration","velocity","part","Part","note","start","loopEnd","loop","Transport"],"sources":["/Users/olgapavlova/Desktop/Art-practise/ADC-Generative-Art-Boilerplate-2023/app/javascript/prototypes/prototype_6/Container.jsx"],"sourcesContent":["import React, { Component } from 'react'\n\nimport * as Tone from 'tone'\n\nimport SC_Button from './SC_Button'\n\nexport default class Container extends Component {\n  constructor(props) {\n    super(props)\n  }\n // Собственно синтезатор\n  handleClick = () => {\n    const synthSettings = {\n      volume: -20,\n      detune: 0,\n      portamento: 0.05,\n      envelope: {\n        attack: 0.05,\n        attackCurve: 'exponential',\n        decay: 0.2,\n        decayCurve: 'exponential',\n        sustain: 0.2,\n        release: 1.5,\n        releaseCurve: 'exponential'\n      },\n      oscillator: {\n        type: 'amsine',\n        modulationType: 'sine',\n        // partialCount: 0,\n        // partials: [],\n        phase: 0,\n        harmonicity: 0.5\n      }\n    }\n    const chorusSettings = {\n      wet: 0.8,\n      type: 'sine',\n      frequency: 45,\n      delayTime: 1,\n      depth: 0.44,\n      spread: 180\n    }\n\n    const distortionSettings = {\n      wet: 0,\n      distortion: 16,\n      oversample: '4x'\n    }\n\n    const frequencyShifterSettings = {\n      wet: 0,\n      frequency: 42\n    }\n\n    const freeverbSettings = {\n      wet: 0.9,\n      roomSize: 0.08,\n      dampening: 40\n    }\n\n    const channelSettings = {\n      volume: 10,\n      pan: 0,\n      mute: false,\n      solo: false\n    }\n\n    const synthNode = new Tone.Synth(synthSettings)\n    const chorusNode = new Tone.Chorus(chorusSettings)\n    const distortionNode = new Tone.Distortion(distortionSettings)\n    const frequencyShifterNode = new Tone.FrequencyShifter(frequencyShifterSettings)\n    const channelNode = new Tone.Channel(channelSettings).toDestination()\n    synthNode.chain(chorusNode, distortionNode, frequencyShifterNode, channelNode)\n\n    // const feedbackDelay = new Tone.FeedbackDelay(feedbackDelaySettings).toDestination();\n    //\n    //\n    // const synth = new Tone.Synth(synthSettings)\n    //\n    // const autoWah = new Tone.AutoWah(autoWahSettings).toDestination()\n    //\n    // const channelSettings = { volume: 0, pan: 0, mute: false, solo: false }\n    // const channel = new Tone.Channel(channelSettings).toDestination()\n    //\n    // synth.chain(autoWah, feedbackDelay, channel)\n    synthNode.triggerAttackRelease('C4', '1')\n\n    const sequence = [\n     {\n       time: '0:1:0',\n       noteName: 'A4',\n       duration: '4n',\n       velocity: 1\n     },\n     {\n       time: '0:1:2',\n       noteName: 'G4',\n       duration: '4n',\n       velocity: 1\n     },\n     {\n       time: '0:1:3',\n       noteName: 'F4',\n       duration: '1n',\n       velocity: 1\n     },\n     {\n       time: '0:2:1',\n       noteName: 'D4',\n       duration: '4n',\n       velocity: 1\n     },\n     {\n       time: '0:2:3',\n       noteName: 'A3',\n       duration: '2n',\n       velocity: 1\n     },\n     {\n       time: '0:2:4',\n       noteName: 'C4',\n       duration: '4n',\n       velocity: 1\n     },\n    \n   ]\n\n    // Создаём партию, добавляем в неё секвенцию\n    // и включаем проигрывание\n    const part = new Tone.Part((time, note) => {\n      synthNode.triggerAttackRelease(\n        note.noteName,\n        note.duration,\n        time,\n        note.velocity\n      )\n    }, sequence).start(0)\n\n    // Указываем длительность партии\n    part.loopEnd = '1m'\n\n    // Включаем зацикливание\n    part.loop = true\n\n    // Включаем звук в браузере\n    // sampler.context.resume()\n\n    // Включаем отсчёт времени в Tone.js\n    Tone.Transport.start()\n\n\n\n  //Запуск синта\n  }\n\n\n  render() {\n    return (\n      <div className=\"Container\">\n        <SC_Button\n          text=\"First Melody\"\n          handleClick={this.handleClick}\n        />\n      </div>\n    )\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAO,KAAKC,IAAZ,MAAsB,MAAtB;AAEA,OAAOC,SAAP,MAAsB,aAAtB;;IAEqBC,S;;;;;EACnB,mBAAYC,KAAZ,EAAmB;IAAA;;IAAA;;IACjB,0BAAMA,KAAN;;IADiB,MAInBC,WAJmB,GAIL,YAAM;MAClB,IAAMC,aAAa,GAAG;QACpBC,MAAM,EAAE,CAAC,EADW;QAEpBC,MAAM,EAAE,CAFY;QAGpBC,UAAU,EAAE,IAHQ;QAIpBC,QAAQ,EAAE;UACRC,MAAM,EAAE,IADA;UAERC,WAAW,EAAE,aAFL;UAGRC,KAAK,EAAE,GAHC;UAIRC,UAAU,EAAE,aAJJ;UAKRC,OAAO,EAAE,GALD;UAMRC,OAAO,EAAE,GAND;UAORC,YAAY,EAAE;QAPN,CAJU;QAapBC,UAAU,EAAE;UACVC,IAAI,EAAE,QADI;UAEVC,cAAc,EAAE,MAFN;UAGV;UACA;UACAC,KAAK,EAAE,CALG;UAMVC,WAAW,EAAE;QANH;MAbQ,CAAtB;MAsBA,IAAMC,cAAc,GAAG;QACrBC,GAAG,EAAE,GADgB;QAErBL,IAAI,EAAE,MAFe;QAGrBM,SAAS,EAAE,EAHU;QAIrBC,SAAS,EAAE,CAJU;QAKrBC,KAAK,EAAE,IALc;QAMrBC,MAAM,EAAE;MANa,CAAvB;MASA,IAAMC,kBAAkB,GAAG;QACzBL,GAAG,EAAE,CADoB;QAEzBM,UAAU,EAAE,EAFa;QAGzBC,UAAU,EAAE;MAHa,CAA3B;MAMA,IAAMC,wBAAwB,GAAG;QAC/BR,GAAG,EAAE,CAD0B;QAE/BC,SAAS,EAAE;MAFoB,CAAjC;MAKA,IAAMQ,gBAAgB,GAAG;QACvBT,GAAG,EAAE,GADkB;QAEvBU,QAAQ,EAAE,IAFa;QAGvBC,SAAS,EAAE;MAHY,CAAzB;MAMA,IAAMC,eAAe,GAAG;QACtB7B,MAAM,EAAE,EADc;QAEtB8B,GAAG,EAAE,CAFiB;QAGtBC,IAAI,EAAE,KAHgB;QAItBC,IAAI,EAAE;MAJgB,CAAxB;MAOA,IAAMC,SAAS,GAAG,IAAIvC,IAAI,CAACwC,KAAT,CAAenC,aAAf,CAAlB;MACA,IAAMoC,UAAU,GAAG,IAAIzC,IAAI,CAAC0C,MAAT,CAAgBpB,cAAhB,CAAnB;MACA,IAAMqB,cAAc,GAAG,IAAI3C,IAAI,CAAC4C,UAAT,CAAoBhB,kBAApB,CAAvB;MACA,IAAMiB,oBAAoB,GAAG,IAAI7C,IAAI,CAAC8C,gBAAT,CAA0Bf,wBAA1B,CAA7B;MACA,IAAMgB,WAAW,GAAG,IAAI/C,IAAI,CAACgD,OAAT,CAAiBb,eAAjB,EAAkCc,aAAlC,EAApB;MACAV,SAAS,CAACW,KAAV,CAAgBT,UAAhB,EAA4BE,cAA5B,EAA4CE,oBAA5C,EAAkEE,WAAlE,EA7DkB,CA+DlB;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;;MACAR,SAAS,CAACY,oBAAV,CAA+B,IAA/B,EAAqC,GAArC;MAEA,IAAMC,QAAQ,GAAG,CAChB;QACEC,IAAI,EAAE,OADR;QAEEC,QAAQ,EAAE,IAFZ;QAGEC,QAAQ,EAAE,IAHZ;QAIEC,QAAQ,EAAE;MAJZ,CADgB,EAOhB;QACEH,IAAI,EAAE,OADR;QAEEC,QAAQ,EAAE,IAFZ;QAGEC,QAAQ,EAAE,IAHZ;QAIEC,QAAQ,EAAE;MAJZ,CAPgB,EAahB;QACEH,IAAI,EAAE,OADR;QAEEC,QAAQ,EAAE,IAFZ;QAGEC,QAAQ,EAAE,IAHZ;QAIEC,QAAQ,EAAE;MAJZ,CAbgB,EAmBhB;QACEH,IAAI,EAAE,OADR;QAEEC,QAAQ,EAAE,IAFZ;QAGEC,QAAQ,EAAE,IAHZ;QAIEC,QAAQ,EAAE;MAJZ,CAnBgB,EAyBhB;QACEH,IAAI,EAAE,OADR;QAEEC,QAAQ,EAAE,IAFZ;QAGEC,QAAQ,EAAE,IAHZ;QAIEC,QAAQ,EAAE;MAJZ,CAzBgB,EA+BhB;QACEH,IAAI,EAAE,OADR;QAEEC,QAAQ,EAAE,IAFZ;QAGEC,QAAQ,EAAE,IAHZ;QAIEC,QAAQ,EAAE;MAJZ,CA/BgB,CAAjB,CA5EkB,CAoHlB;MACA;;MACA,IAAMC,IAAI,GAAG,IAAIzD,IAAI,CAAC0D,IAAT,CAAc,UAACL,IAAD,EAAOM,IAAP,EAAgB;QACzCpB,SAAS,CAACY,oBAAV,CACEQ,IAAI,CAACL,QADP,EAEEK,IAAI,CAACJ,QAFP,EAGEF,IAHF,EAIEM,IAAI,CAACH,QAJP;MAMD,CAPY,EAOVJ,QAPU,EAOAQ,KAPA,CAOM,CAPN,CAAb,CAtHkB,CA+HlB;;MACAH,IAAI,CAACI,OAAL,GAAe,IAAf,CAhIkB,CAkIlB;;MACAJ,IAAI,CAACK,IAAL,GAAY,IAAZ,CAnIkB,CAqIlB;MACA;MAEA;;MACA9D,IAAI,CAAC+D,SAAL,CAAeH,KAAf,GAzIkB,CA6IpB;IACC,CAlJkB;;IAAA;EAElB,C,CACF;;;;;WAkJC,kBAAS;MACP,oBACE;QAAK,SAAS,EAAC,WAAf;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACE,oBAAC,SAAD;QACE,IAAI,EAAC,cADP;QAEE,WAAW,EAAE,KAAKxD,WAFpB;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EADF,CADF;IAQD;;;;EA/JoCL,S;;SAAlBG,S"},"metadata":{},"sourceType":"module"}